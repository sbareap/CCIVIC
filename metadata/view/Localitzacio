{
    "id": "ExtBox1-ext-gen9668",
    "type": "panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "id": null,
        "itemId": null,
        "layout": "fit",
        "designer|userClassName": "Localitzacio"
    },
    "customConfigs": [],
    "designerId": "1f1d7000-8ddc-48e2-b342-18c77759c275",
    "$viewOrder": 3,
    "expanded": false,
    "cn": [
        {
            "id": "ExtBox1-ext-gen3332",
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLocalitzacioShow",
                "implHandler": [
                    "var initialLocation;\r",
                    "var cornella = new google.maps.LatLng(41.3556405, 2.070240300000023);\r",
                    "var Lat, Lng;\r",
                    "var map, geocoder;\r",
                    "var browserSupportFlag;\r",
                    "var infowindow = new google.maps.InfoWindow();\r",
                    "\r",
                    "var myOptions = {\r",
                    "    zoom: 17,\r",
                    "    mapTypeId: google.maps.MapTypeId.ROADMAP\r",
                    "};\r",
                    "map = new google.maps.Map(document.getElementById(\"map\"), myOptions);       \r",
                    "\r",
                    "// Instancia del geocodificador\r",
                    "geocoder = new google.maps.Geocoder();\r",
                    "\r",
                    "//Comprovo si tinc una posició gravada a la llista de dades de la incidència\r",
                    "//si la tinc l'agafo com a localitació inicial\r",
                    "var store = Ext.data.StoreManager.lookup('IncidStore'),\r",
                    "list = Ext.getCmp('incidList');\r",
                    "\r",
                    "ListStore = list.getStore();\r",
                    "\r",
                    "for(var i = 0; i < ListStore.getCount(); i++) {   \r",
                    "    if (ListStore.getAt(i).get('IdCamp') === 'LOC'){        \r",
                    "        Lat = ListStore.getAt(i).get('ValorCamp1');\r",
                    "        Lng = ListStore.getAt(i).get('ValorCamp2');\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if (Lat || Lng){    \r",
                    "    initialLocation = new google.maps.LatLng(Lat, Lng);\r",
                    "}    \r",
                    "\r",
                    "localitza(initialLocation);\r",
                    "\r",
                    "function localitza(initialLocation){\r",
                    "    // Metodo de Geolocalización de W3C\r",
                    "    if(navigator.geolocation) {\r",
                    "        browserSupportFlag = true;\r",
                    "        navigator.geolocation.getCurrentPosition(function(position) {                                \r",
                    "            console.log(initialLocation);\r",
                    "            if (!initialLocation){                        \r",
                    "                initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);                                                        \r",
                    "            }\r",
                    "\r",
                    "            map.setCenter(initialLocation);\r",
                    "\r",
                    "            var marker = new google.maps.Marker({map: map, position: map.getCenter(), draggable: true});\r",
                    "\r",
                    "            processReverseGeocoding(map.getCenter(), showMarkerInfo);\r",
                    "\r",
                    "            google.maps.event.addListener(marker, 'mouseup', function(event) {             \r",
                    "                processReverseGeocoding(event.latLng, showMarkerInfo);           \r",
                    "            });      \r",
                    "\r",
                    "            infowindow.setPosition(initialLocation);\r",
                    "            infowindow.open(map);\r",
                    "        }, function() {\r",
                    "            handleNoGeolocation(browserSupportFlag);\r",
                    "        });\r",
                    "    } \r",
                    "    else {\r",
                    "        // El navegador no soporta la Geolocalización\r",
                    "        browserSupportFlag = false;\r",
                    "        handleNoGeolocation(browserSupportFlag);        \r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "function handleNoGeolocation(errorFlag) {\r",
                    "    if (errorFlag === true) {\r",
                    "        initialLocation = cornella;\r",
                    "        contentString = \"Error: El servicio de geolocalización ha fallado.\";\r",
                    "\r",
                    "    } else {\r",
                    "        initialLocation = cornella;\r",
                    "        contentString = \"Error: Tu navegador no soporta la geolocalización. Estas en Cornellà?\";\r",
                    "    }\r",
                    "    map.setCenter(initialLocation);\r",
                    "\r",
                    "    var marker = new google.maps.Marker({map: map, position: map.getCenter(), draggable: true});\r",
                    "\r",
                    "    processReverseGeocoding(map.getCenter(), showMarkerInfo);\r",
                    "\r",
                    "    google.maps.event.addListener(marker, 'mouseup', function(event) {             \r",
                    "        processReverseGeocoding(event.latLng, showMarkerInfo);           \r",
                    "    });      \r",
                    "\r",
                    "    infowindow.setContent(contentString);\r",
                    "    infowindow.setPosition(initialLocation);\r",
                    "    infowindow.open(map);\r",
                    "}\r",
                    "\r",
                    "function processReverseGeocoding(location, callback)\r",
                    "{\r",
                    "    // Propiedades de la georreferenciación\r",
                    "    var request = {\r",
                    "        latLng: location\r",
                    "    };\r",
                    "\r",
                    "    // Invocación a la georreferenciación (proceso asíncrono)\r",
                    "    geocoder.geocode(request, function(results, status) {\r",
                    "\r",
                    "        /*\r",
                    "        * OK\r",
                    "        * ZERO_RESULTS\r",
                    "        * OVER_QUERY_LIMIT\r",
                    "        * REQUEST_DENIED\r",
                    "        * INVALID_REQUEST \r",
                    "        */\r",
                    "\r",
                    "        if(status == google.maps.GeocoderStatus.OK)\r",
                    "        { \r",
                    "            callback (results);                       \r",
                    "            return results;\r",
                    "        }\r",
                    "\r",
                    "        // En caso de error retorna el estado        \r",
                    "        return status;\r",
                    "    });\r",
                    "}\r",
                    "\r",
                    "function showMarkerInfo(locations)\r",
                    "{    \r",
                    "    var poblacio, cpostal, pais;\r",
                    "\r",
                    "    // Centra el mapa a la ubicació específica\r",
                    "    map.setCenter(locations[0].geometry.location);\r",
                    "\r",
                    "    for (i=0;i<locations[0].address_components.length;i++){\r",
                    "        for (j=0;j<locations[0].address_components[i].types.length;j++){\r",
                    "            if(locations[0].address_components[i].types[j]==\"locality\"){\r",
                    "                poblacio = locations[0].address_components[i].long_name;\r",
                    "            }\r",
                    "            if(locations[0].address_components[i].types[j]==\"postal_code\"){\r",
                    "                cpostal = locations[0].address_components[i].long_name;\r",
                    "            }\r",
                    "            if(locations[0].address_components[i].types[j]==\"country\"){\r",
                    "                pais = locations[0].address_components[i].long_name;\r",
                    "            }                \r",
                    "        }\r",
                    "    }\r",
                    "    var poblacioPais = ', '+cpostal+' '+poblacio+', '+pais;    \r",
                    "    var adrecaComplerta = locations[0].formatted_address.replace(poblacioPais,'');\r",
                    "\r",
                    "    //Emmagatzemo la longitud i latitud en camps ocults    \r",
                    "    var Lat = locations[0].geometry.location.lat();\r",
                    "    var Lng = locations[0].geometry.location.lng();\r",
                    "\r",
                    "    console.log(Lat);\r",
                    "    console.log(Lng);\r",
                    "    Ext.ComponentQuery.query('#latHidden')[0].setValue(Lat);\r",
                    "    Ext.ComponentQuery.query('#lngHidden')[0].setValue(Lng);\r",
                    "\r",
                    "    //Comprova que l'adreça estigui dins els limits de Cornellà\r",
                    "    if (cpostal != '08940'){\r",
                    "        Ext.Msg.confirm('Avís:','L\\'adreça actual està fora de Cornellà de Llobregat. Vols situar-te?',                        \r",
                    "        function(btn){                            \r",
                    "            if (btn == 'yes'){\r",
                    "                console.log('localitza cornella '+ cornella);\r",
                    "                localitza(cornella);\r",
                    "            }\r",
                    "        });\r",
                    "        Ext.ComponentQuery.query('#adreca')[0].setValue('');\r",
                    "        Ext.ComponentQuery.query('#latHidden')[0].setValue('');\r",
                    "        Ext.ComponentQuery.query('#lngHidden')[0].setValue('');\r",
                    "    }\r",
                    "    else {\r",
                    "        console.log(adrecaComplerta);\r",
                    "        Ext.ComponentQuery.query('#adreca')[0].setValue(adrecaComplerta); \r",
                    "        Ext.ComponentQuery.query('#latHidden')[0].setValue(Lat);\r",
                    "        Ext.ComponentQuery.query('#lngHidden')[0].setValue(Lng);\r",
                    "    }\r",
                    "}"
                ],
                "name": "show",
                "designer|userClassName": "onLocalitzacioShow"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen13488",
            "type": "container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "adrecaContainer",
                "ui": "",
                "designer|userClassName": "MyContainer"
            },
            "customConfigs": [],
            "expanded": false,
            "cn": [
                {
                    "id": "ExtBox1-ext-gen23004",
                    "type": "hiddenfield",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "latHidden",
                        "designer|userClassName": "MyHiddenField"
                    },
                    "customConfigs": [],
                    "expanded": true
                },
                {
                    "id": "ExtBox1-ext-gen23566",
                    "type": "hiddenfield",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "itemId": "lngHidden",
                        "designer|userClassName": "MyHiddenField1"
                    },
                    "customConfigs": [],
                    "expanded": true
                }
            ]
        },
        {
            "id": "ExtBox1-ext-gen9757",
            "type": "container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "mapContainer",
                "designer|userClassName": "MyContainer2"
            },
            "customConfigs": [],
            "expanded": true,
            "cn": [
                {
                    "id": "ExtBox1-ext-gen27078",
                    "type": "textfield",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "docked": "bottom",
                        "itemId": "adreca",
                        "label": null,
                        "readOnly": true,
                        "designer|userClassName": "MyTextField"
                    },
                    "customConfigs": [],
                    "expanded": true
                },
                {
                    "id": "ExtBox1-ext-gen15574",
                    "type": "map",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "docked": "left",
                        "height": null,
                        "id": "map",
                        "itemId": "Map",
                        "padding": null,
                        "ui": "",
                        "width": "100%",
                        "designer|userClassName": "MyMap"
                    },
                    "customConfigs": [],
                    "expanded": true
                }
            ]
        },
        {
            "id": "ExtBox1-ext-gen24333",
            "type": "toolbar",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "docked": "bottom",
                "itemId": "incidBar",
                "designer|userClassName": "MyToolbar1"
            },
            "customConfigs": [],
            "expanded": true,
            "cn": [
                {
                    "id": "ExtBox1-ext-gen13950",
                    "type": "button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "docked": null,
                        "height": null,
                        "itemId": "btnAdreca",
                        "ui": "round",
                        "width": null,
                        "icon": null,
                        "iconAlign": "center",
                        "iconCls": null,
                        "iconMask": true,
                        "text": "Acceptar",
                        "designer|userClassName": "MyButton2"
                    },
                    "customConfigs": [],
                    "expanded": true,
                    "cn": [
                        {
                            "id": "ExtBox1-ext-gen10579",
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onAdrecaButtonTap",
                                "implHandler": [
                                    "var adreca = Ext.ComponentQuery.query('#adreca')[0].getValue();\r",
                                    "var Lat = Ext.ComponentQuery.query('#latHidden')[0].getValue();\r",
                                    "var Lng = Ext.ComponentQuery.query('#lngHidden')[0].getValue();\r",
                                    "\r",
                                    "//Gravar l'adreça a listIncid\r",
                                    "var store = Ext.data.StoreManager.lookup('IncidStore'),\r",
                                    "list = Ext.getCmp('incidList');\r",
                                    "\r",
                                    "ListStore = list.getStore();\r",
                                    "\r",
                                    "for(var i = 0; i < ListStore.getCount(); i++) {   \r",
                                    "    if (ListStore.getAt(i).get('IdCamp') == 'LOC'){        \r",
                                    "        ListStore.getAt(i).set('ValorCamp', adreca);\r",
                                    "        ListStore.getAt(i).set('ValorCamp1', Lat);\r",
                                    "        ListStore.getAt(i).set('ValorCamp2', Lng);    \r",
                                    "\r",
                                    "    }\r",
                                    "}\r",
                                    "\r",
                                    "list.refresh();\r",
                                    "this.getParent().pop();"
                                ],
                                "name": "tap",
                                "designer|userClassName": "onAdrecaButtonTap"
                            },
                            "customConfigs": [],
                            "expanded": true
                        }
                    ]
                }
            ]
        }
    ]
}