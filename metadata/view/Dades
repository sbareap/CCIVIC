{
    "id": "ExtBox1-ext-gen14031",
    "type": "panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "width": null,
        "layout": "fit",
        "modal": false,
        "designer|userClassName": "Dades"
    },
    "customConfigs": [],
    "designerId": "2c3d283d-b991-43c0-a226-4a278f8abbff",
    "$viewOrder": 1,
    "expanded": true,
    "cn": [
        {
            "id": "ExtBox1-ext-gen19942",
            "type": "titlebar",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "docked": "top",
                "itemId": "dadesBar",
                "title": "Dades Personals",
                "designer|userClassName": "MyTitleBar"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen14781",
            "type": "list",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "docked": null,
                "height": null,
                "id": "prefList",
                "itemId": "PrefList",
                "ui": "round",
                "width": null,
                "itemTpl": "<div>{CodiPref}&nbsp;{Req}</div><div><small>{ValorPref}</small></div>",
                "store": "PrefStore",
                "onItemDisclosure": true,
                "designer|userClassName": "MyList"
            },
            "customConfigs": [],
            "expanded": true,
            "cn": [
                {
                    "id": "ExtBox1-ext-gen4332",
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onPrefListItemTap",
                        "implHandler": [
                            "Ext.Msg.show({\r",
                            "    title: record.get('CodiPref')+':',           \r",
                            "    buttons:  [{text : 'Cancel·lar'}, {text : 'Acceptar'}],           \r",
                            "    prompt : { clearIcon : true },\r",
                            "    value: record.get('ValorPref'),\r",
                            "    fn: function(btn,text) {    \r",
                            "        if (btn == 'Acceptar'){      \r",
                            "            // Validació del mail\r",
                            "            if (record.get('IdPref') == 'EMAIL'){            \r",
                            "                if (valEmail(text)){\r",
                            "                    record.set('ValorPref', text);\r",
                            "                }\r",
                            "                else{\r",
                            "                    Ext.Msg.show({ title: 'Error:',\r",
                            "                        message: 'Adreça electrònica incorrecta. Torna a introduir-la.',\r",
                            "                        buttons:  [{text : 'Acceptar'}]});\r",
                            "                }\r",
                            "            } \r",
                            "            \r",
                            "            // Validació del NIF o NIE\r",
                            "            else if (record.get('IdPref') == 'NUMDOC'){            \r",
                            "                var res = valNumDoc(text);\r",
                            "                if (res == 1 || res == 2){\r",
                            "                    record.set('ValorPref', text);\r",
                            "                }\r",
                            "                else{                        \r",
                            "                    Ext.Msg.show({ title: 'Error:',\r",
                            "                        message: 'Número de document incorrecte. Torna a introduir-lo.',                                       \r",
                            "                        buttons:  [{text : 'Acceptar'}]});\r",
                            "                    }\r",
                            "                }\r",
                            "             // Validació del mòvil\r",
                            "             else if (record.get('IdPref') == 'TEL'){            \r",
                            "                   if (valMovil(text)){\r",
                            "                       record.set('ValorPref', text);\r",
                            "                   }\r",
                            "                   else{\r",
                            "                       Ext.Msg.show({ title: 'Error:',\r",
                            "                            message: 'Mòbil incorrecte. Torna a introduir-lo.',\r",
                            "                            buttons:  [{text : 'Acceptar'}]});                        \r",
                            "                       }\r",
                            "                   }\r",
                            "             else record.set('ValorPref', text);\r",
                            "          }       \r",
                            "        }\r",
                            "});\r",
                            "\r",
                            "            function valEmail(valor){\r",
                            "                re = /^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,3})$/\r",
                            "                if(!re.exec(valor))    {\r",
                            "                    return false;\r",
                            "                }else{\r",
                            "                    return true;\r",
                            "                }\r",
                            "            }\r",
                            "\r",
                            "            //Retorna: 1 = NIF ok, 2 = NIE ok, -1 = NIF error, -2 = NIE error, 0 = formato invalido\r",
                            "            //fuente: http://compartecodigo.com/javascript/validar-nif-cif-nie-segun-ley-vigente-31.html\r",
                            "            function valNumDoc(a) \r",
                            "            {\r",
                            "                var temp=a.toUpperCase();\r",
                            "                var cadenadni=\"TRWAGMYFPDXBNJZSQVHLCKE\";\r",
                            "\r",
                            "                if (temp!==''){\r",
                            "                    //si no tiene un formato valido devuelve error\r",
                            "                    if ((!/^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$/.test(temp) && !/^[T]{1}[A-Z0-9]{8}$/.test(temp)) && !/^[0-9]{8}[A-Z]{1}$/.test(temp))\r",
                            "                    {\r",
                            "                        return 0;\r",
                            "                    }\r",
                            "\r",
                            "                    //comprobacion de NIFs estandar\r",
                            "                    if (/^[0-9]{8}[A-Z]{1}$/.test(temp))\r",
                            "                    {\r",
                            "                        posicion = a.substring(8,0) % 23;\r",
                            "                        letra = cadenadni.charAt(posicion);\r",
                            "                        var letradni=temp.charAt(8);\r",
                            "                        if (letra == letradni)\r",
                            "                        {\r",
                            "                            return 1;\r",
                            "                        }\r",
                            "                        else\r",
                            "                        {\r",
                            "                            return -1;\r",
                            "                        }\r",
                            "                    }\r",
                            "\r",
                            "                    //comprobacion de NIFs especiales (se calculan como CIFs)\r",
                            "                    if (/^[KLM]{1}/.test(temp))\r",
                            "                    {\r",
                            "                        if (a[8] == String.fromCharCode(64 + n))\r",
                            "                        {\r",
                            "                            return 1;\r",
                            "                        }\r",
                            "                        else\r",
                            "                        {\r",
                            "                            return -1;\r",
                            "                        }\r",
                            "                    }\r",
                            "\r",
                            "\r",
                            "                    //comprobacion de NIEs\r",
                            "                    //T\r",
                            "                    if (/^[T]{1}/.test(temp))\r",
                            "                    {\r",
                            "                        if (a[8] == /^[T]{1}[A-Z0-9]{8}$/.test(temp))\r",
                            "                        {\r",
                            "                            return 2;\r",
                            "                        }\r",
                            "                        else\r",
                            "                        {\r",
                            "                            return -2;\r",
                            "                        }\r",
                            "                    }\r",
                            "\r",
                            "                    //XYZ\r",
                            "                    if (/^[XYZ]{1}/.test(temp))\r",
                            "                    {\r",
                            "                        pos = str_replace(['X', 'Y', 'Z'], ['0','1','2'], temp).substring(0, 8) % 23;\r",
                            "                        if (a[8] == cadenadni.substring(pos, pos + 1))\r",
                            "                        {\r",
                            "                            return 2;\r",
                            "                        }\r",
                            "                        else\r",
                            "                        {\r",
                            "                            return -2;\r",
                            "                        }\r",
                            "                    }\r",
                            "                }\r",
                            "\r",
                            "                return 0;\r",
                            "            }\r",
                            "\r",
                            "            //fuente: https://raw.github.com/kvz/phpjs/master/functions/strings/str_replace.js\r",
                            "            function str_replace (search, replace, subject, count) {\r",
                            "                var i = 0,\r",
                            "                j = 0,\r",
                            "                temp = '',\r",
                            "                repl = '',\r",
                            "                sl = 0,\r",
                            "                fl = 0,\r",
                            "                f = [].concat(search),\r",
                            "                r = [].concat(replace),\r",
                            "                s = subject,\r",
                            "                ra = Object.prototype.toString.call(r) === '[object Array]',\r",
                            "                sa = Object.prototype.toString.call(s) === '[object Array]';\r",
                            "                s = [].concat(s);\r",
                            "                if (count) {\r",
                            "                    this.window[count] = 0;\r",
                            "                }\r",
                            "\r",
                            "                for (i = 0, sl = s.length; i < sl; i++) {\r",
                            "                    if (s[i] === '') {\r",
                            "                        continue;\r",
                            "                    }\r",
                            "                    for (j = 0, fl = f.length; j < fl; j++) {\r",
                            "                        temp = s[i] + '';\r",
                            "                        repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];\r",
                            "                        s[i] = (temp).split(f[j]).join(repl);\r",
                            "                        if (count && s[i] !== temp) {\r",
                            "                            this.window[count] += (temp.length - s[i].length) / f[j].length;\r",
                            "                        }\r",
                            "                    }\r",
                            "                }\r",
                            "                return sa ? s : s[0];\r",
                            "            }\r",
                            "\r",
                            "            function valMovil(valor) {\r",
                            "                re=/^\\d{9}$/\r",
                            "                if(!re.exec(valor))    {\r",
                            "                    return false;\r",
                            "                }else{\r",
                            "                    return true;\r",
                            "                }    \r",
                            "            }"
                        ],
                        "name": "itemtap",
                        "designer|userClassName": "onPrefListItemTap"
                    },
                    "customConfigs": [],
                    "expanded": true
                }
            ]
        },
        {
            "id": "ExtBox1-ext-gen32738",
            "type": "toolbar",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "docked": "bottom",
                "itemId": "dadesBar",
                "designer|userClassName": "MyToolbar2",
                "container|align": null
            },
            "customConfigs": [],
            "expanded": true,
            "cn": [
                {
                    "id": "ExtBox1-ext-gen6568",
                    "type": "button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "docked": null,
                        "id": "btnGravar",
                        "itemId": "BtnGravar",
                        "ui": "round",
                        "width": 70,
                        "text": "Gravar",
                        "designer|userClassName": "MyButton"
                    },
                    "customConfigs": [],
                    "expanded": true,
                    "cn": [
                        {
                            "id": "ExtBox1-ext-gen6980",
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onBtnGrabarTap",
                                "implHandler": [
                                    "var ListStore = Ext.data.StoreManager.lookup('PrefStore'),\r",
                                    "correcte = 1;\r",
                                    "\r",
                                    "for(var i = 0; i < ListStore.getCount(); i++) {   \r",
                                    "    if ((ListStore.getAt(i).get('Req') == '*') && (ListStore.getAt(i).get('ValorPref').length === 0)){                \r",
                                    "        Ext.Msg.show({ title: 'Error:',\r",
                                    "            message: 'Falta introduir dades requerides.',\r",
                                    "            buttons:  [{text : 'Acceptar'}]});\r",
                                    "            correcte = 0;\r",
                                    "        }\r",
                                    "    }\r",
                                    "\r",
                                    "    if (correcte == 1) {\r",
                                    "        ListStore.sync();    \r",
                                    "        Ext.Msg.show({ title: 'Avís:',\r",
                                    "            message: 'Dades gravades correctament.',\r",
                                    "            buttons:  [{text : 'Acceptar'}]});\r",
                                    "            this.getParent().pop();\r",
                                    "        }"
                                ],
                                "name": "tap",
                                "designer|userClassName": "onBtnGrabarTap"
                            },
                            "customConfigs": [],
                            "expanded": true
                        }
                    ]
                }
            ]
        }
    ]
}